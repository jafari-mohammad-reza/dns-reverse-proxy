version: "3.8"

services:

  zookeeper:
    image: docker.arvancloud.ir/confluentinc/cp-zookeeper:7.8.0
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  kafka:
    image: docker.arvancloud.ir/confluentinc/cp-kafka:7.8.0
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

  loki:
    image: docker.arvancloud.ir/grafana/loki:2.8.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./confs/loki-config.yaml:/etc/loki/local-config.yaml
      - ./loki:/var/loki
  clickhouse:
    image: docker.arvancloud.ir/yandex/clickhouse-server:21.8.10.19
    container_name: clickhouse
    ports:
      - "8123:8123" # HTTP interface
      - "9000:9000" # Native client
    volumes:
      - clickhouse-data:/var/lib/clickhouse

  vector:
    image: docker.arvancloud.ir/timberio/vector:0.25.1-alpine
    container_name: vector
    volumes:
      - ./confs/vector.toml:/etc/vector/vector.toml:ro
      - ./loki:/var/loki
    depends_on:
      - kafka
      - loki
      - clickhouse
    restart: unless-stopped


  grafana:
    image: docker.arvancloud.ir/grafana/grafana:8.3.3
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./confs/grafana/:/etc/grafana/provisioning/
    depends_on:
      - loki
      - clickhouse

volumes:
  clickhouse-data:
  grafana-data:
